# File: templates/npm-with-params.yml

parameters:
  name: ''  # defaults for any parameters that aren't specified
  vmImage: ''
  dockername: ''
  LCG: ''
  artifact: ''
  CMTCONFIG: ''


jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 130
  pool: 
    vmImage: ${{ parameters.vmImage }}
  steps:
  - script: |
     sudo apt-get install lsb-release
     wget https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
     sudo dpkg -i cvmfs-release-latest_all.deb
     rm -f cvmfs-release-latest_all.deb
     sudo apt-get update
     sudo apt-get install cvmfs cvmfs-config-default
     sudo cvmfs_config setup
     echo  "CVMFS_REPOSITORIES=lhcb.cern.ch,grid.cern.ch,sft.cern.ch" | sudo tee -a  /etc/cvmfs/default.local > /dev/null
     echo  "CVMFS_HTTP_PROXY=DIRECT"  | sudo tee -a  /etc/cvmfs/default.local > /dev/null
     sudo service autofs restart
     sudo cvmfs_config probe
    displayName: 'install cvmfs'
  - script: |
      docker  create -v  osya --name ostap-build   ${{ parameters.dockername }}
      docker cp  .  ostap-build:/osya
    displayName: 'docker container'
  - script: |
     docker run --rm   -v /cvmfs:/cvmfs:shared --volumes-from ostap-build -u:0  ${{ parameters.dockername }} /bin/bash -c "cd /osya/ && ./scripts/bootstrap ${{ parameters.LCG }} ${{ parameters.CMTCONFIG }}"
     docker cp  ostap-build:/osya/build .
    displayName: 'build stage'
  - script: |
     sudo cvmfs_config chksetup
     echo $?
     sudo service autofs restart
     docker run --rm   -v /cvmfs:/cvmfs:shared --volumes-from ostap-build -u:0 ${{ parameters.dockername }} /bin/bash -c "cd /osya/ && ./scripts/test ${{ parameters.LCG }} ${{ parameters.CMTCONFIG }}"
    displayName: 'test stage'
  - script: |
     docker cp  ostap-build:/osya/build .
    condition: always()
    displayName: 'copy build result'
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName:   ${{ parameters.artifact }}
      targetPath: '$(System.DefaultWorkingDirectory)/build'
    condition: always()
