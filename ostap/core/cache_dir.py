#!/usr/bin/env python
# -*- coding: utf-8 -*-
# =============================================================================
## @file cache_dir.py
#  @author Vanya BELYAEV Ivan.Belyaev@itep.ru
#  @date 2014-03-10
# =============================================================================
""" Cache directory for ostap 
""" 
# =============================================================================
__author__  = "Vanya BELYAEV  Ivan.Belyaev@itep.ru"
__date__    = "2014-03-10"
__version__ = "$Revision$"
__all__     = (
    'cache_dir' , ## work/cache directory
    )
# =============================================================================
from   ostap.utils.env   import get_env, OSTAP_CACHE_DIR 
from   ostap.utils.basic import make_dirs, writeable 
import os
# =============================================================================
# logging 
# =============================================================================
from ostap.logger.logger import getLogger 
if '__main__' ==  __name__ : logger = getLogger ( 'ostap.core.cache_dir'  )
else                       : logger = getLogger ( __name__                )
# =============================================================================
cache_dir = None
# =============================================================================
if not cache_dir : # ==========================================================
    # =========================================================================
    cache_dir = get_env ( OSTAP_CACHE_DIR , '' )
# =============================================================================
if not cache_dir : # ==========================================================
    # =========================================================================
    import ostap.core.config as OCC 
    cache_dir = OCC.general.get ( 'CACHE_DIR' , None )
    del OCC
# =============================================================================
if not cache_dir : # ==========================================================
    # =========================================================================
    cache_dir = '$HOME/.cache/ostap'

# =============================================================================
if cache_dir : # ==============================================================
    # =========================================================================
    cache_dir = os.path.expandvars ( cache_dir )
    cache_dir = os.path.expanduser ( cache_dir )
    cache_dir = os.path.expandvars ( cache_dir )
    cache_dir = os.path.expanduser ( cache_dir )
    # =========================================================================
    if not os.path.exists ( cache_dir ): # ====================================
        # =====================================================================
        try : # ===============================================================
            # =================================================================
            make_dirs ( cache_dir , exist_ok = True ) 
            # =================================================================
        except OSError : # ====================================================
            # =================================================================
            pass
        
# =============================================================================
if not cache_dir                    or \
   not os.path.exists ( cache_dir ) or \
   not os.path.isdir  ( cache_dir ) or \
   not writeable      ( cache_dir ) :
    # =========================================================================
    from ostap.utils.cleanup import CleanUp
    cache_dir = CleanUp.tempdir ( prefix = 'ostap-cache-' ) 
    logger.warning ( 'Use temporary cache directory: %s' % cache_dir )
    
# =============================================================================
if '__main__' == __name__ : 
    
    from ostap.utils.docme import docme
    docme ( __name__ , logger = logger )
    
# =============================================================================
##                                                                      The END 
# =============================================================================
