#!/usr/bin/bash

echo 'build Ostap with LCG-cvmfs' 

LCG=${1:-dev3/latest}
PLATFORM=${2:-x86_64-el9-clang19-opt} 

# ================================================================================
## Wake up the cvmfs fuse mount
#  - on Windows WSL some action is required
# ================================================================================
for run in {1..10}; do

    for the_dir in /cvmfs/sft.cern.ch/                         \
		   /cvmfs/sft.cern.ch/lcg                      \
		   /cvmfs/sft.cern.ch/lcg/views                \
		   /cvmfs/sft-nightlies.cern.ch                \
		   /cvmfs/sft-nightlies.cern.ch/lcg            \
		   /cvmfs/sft-nightlies.cern.ch/lcg/views      \
		   /cvmfs/sft.cern.ch/lcg/views/${LCG}         \
		   /cvmfs/sft.cern.ch/lcg/views/${LCG}/${PLATFORM}
    do
	
	if [[ ! -d $the_dir ]]
	then
	    ( ( ls -al $the_dir >/dev/null 2>&1 ) ;
	      ( cd     $the_dir >/dev/null 2>&1 ; ls -al .  >/dev/null 2>&1 ) ;
	      ( ls -al $the_dir >/dev/null 2>&1 ) )
	fi
	
    done 
    
    for the_file in /cvmfs/sft.cern.ch/lcg/views/setupViews.sh \
		    /cvmfs/sft.cern.ch/lcg/views/setupViews.csh
    do
	( ( ls -al $the_file >/dev/null 2>&1 ) ;
	  ( cat    $the_file >/dev/null 2>&1 ) ; 
	  ( ls -al $the_file >/dev/null 2>&1 ) )
    done
    
    if [[ -d /cvmfs/sft.cern.ch                          &&
	  -d /cvmfs/sft.cern.ch/lcg                      &&
	  -d /cvmfs/sft.cern.ch/lcg/views                &&
	  -d /cvmfs/sft-nightlies.cern.ch                &&
	  -d /cvmfs/sft-nightlies.cern.ch/lcg            &&
	  -d /cvmfs/sft-nightlies.cern.ch/lcg/views      &&
	  -f /cvmfs/sft.cern.ch/lcg/views/setupViews.sh  &&
	  -f /cvmfs/sft.cern.ch/lcg/views/setupViews.csh ]] 
    then
	break
    else
	echo 'BUILD WITH LCG    : try to wake up  the ' $run 
	sleep 1 
    fi
    
done

echo 'I AM HERE-1' 

if [[ $LCG && -d /cvmfs/sft.cern.ch/lcg/views/${LCG} ]]
then
    true 
else
    echo 'BUILD WITH LCG    : Valid LCGs are:' `ls /cvmfs/sft.cern.ch/lcg/views`
    return 110  
fi

if [[ $PLATFORM && -d /cvmfs/sft.cern.ch/lcg/views/${LCG}/${PLATFORM} ]]
then
    true
else
    echo 'BUILD_WITH_LCG    : Valid platforms are:' `ls /cvmfs/sft.cern.ch/lcg/views/$LCG`
    return 120
fi

LCG_SETUP=/cvmfs/sft.cern.ch/lcg/views/${LCG}/${PLATFORM}/setup.sh 
ls -al $LCG_SETUP

if [[ $LCG && $PLATFORM && -f $LCG_SETUP ]]
then
    echo 'BUILD WITH LCG    : source LCG setup   : ' ${LCG_SETUP}  
    source $LCG_SETUP
else
    echo 'no valid LCG/PLATFORM/setup script: ' ${LCG_SETUP}
    return 130 
fi

if [[ $ROOTSYS &&  -d $ROOTSYS ]]
then
    true 
else 
    echo 'BUILD WITH LCG    : No ROOTSYS directory : ' ${ROOTSYS}
    return 140
fi
 
if   [[ "$HOME" == "/afs/infn.it/user/i/ibelyaev" ]]
then 
    OSTAP_HOME=/teo/user/ibelyaev/ostap
elif [[ "$HOME" == "/afs/cern.ch/user/i/ibelyaev" ]]
then 
    OSTAP_HOME=$HOME/cmtuser/RELEASE/ostap
else    
    OSTAP_HOME=$HOME/ostap
fi

OSTAP_SOURCE=${3:-$OSTAP_HOME}

if [[ $OSTAP_SOURCE                        &&
      -d ${OSTAP_SOURCE}                   &&
      -d ${OSTAP_SOURCE}/ostap             &&
      -d ${OSTAP_SOURCE}/source            &&
      -d ${OSTAP_SOURCE}/scripts           &&
      -d ${OSTAP_SOURCE}/examples          &&
      -d ${OSTAP_SOURCE}/data              &&
      -f ${OSTAP_SOURCE}/CMakeLists.txt    &&
      -f ${OSTAP_SOURCE}/.aux/.build-ostap ]]
then
    echo 'BUILD WITH LCG    : use OSTAP_SOURCE   : ' ${OSTAP_SOURCE}
else
    echo 'BUILD WITH LCG    : No valid source directory is found!' ${OSTAP_SOURCE}
    return 150 
fi 

## parameter #4: build directory
OSTAP_BUILD=${4:-$OSTAP_SOURCE/build}

if   [[ $OSTAP_BUILD && -d $OSTAP_BUILD && -w $OSTAP_BUILD ]]
then
    echo 'BUILD WITH LCG    : use OSTAP_BUILD    : ' ${OSTAP_BUILD}    
elif [[ -w $OSTAP_SOURCE ]]
then 
    mkdir $OSTAP_SOURCE/build
    OSTAP_BUILD=$OSTAP_SOURCE/build  
    echo 'BUILD WITH LCG    : Build directory is created ' ${OSTAP_BUILD}
else
    OSTAP_BUILD=`mktemp -d -t ostap-$(date '+%Y-%b-%d')-OSTAP-BUILD-DIR-XXXXXX`
    echo 'BUILD WITH LCG    : Build directory is created ' ${OSTAP_BUILD}
fi 


if [[ -f ${OSTAP_BUILD}/.build-ostap ]]
then
    echo 'BUILD WITH LCG: use  existing .build.ostap ' $OSTAP_BUILD/.build-ostap
else 
    cp $OSTAP_SOURCE/.aux/.build-ostap $OSTAP_BUILD/.build-ostap
    echo 'BUILD WITH LCG    : copy .build-ostap from     ' ${OSTAP_BUILD}/.aux/.build-ostap
fi

## parameter #5: install directory 
OSTAP_INSTALL=${5:-$OSTAP_BUILD/INSTALL/LCG$LCG_VERSION/$PLATFORM}

if   [[ $OSTAP_INSTALL && -d $OSTAP_INSTALL && -w $OSTAP_INSTALL ]]
then
    echo 'BUILD WITH LCG    : use OSTAP_INSTALL  : ' ${OSTAP_INSTALL}
    ( echo 'BUILD WITH LCG    : CLEAN INSTALL DIRECTORY'    ; cd $OSTAP_INSTALL ; echo ' - BUILD OSTAP    : CWD ' $PWD ;  rm -rfv .footprints .ostap.build .ostaprc .rootlogon.C cmake examples include lib scripts thisostap.sh )
else
    OSTAP_INSTALL=${OSTAP_BUILD}/INSTALL/LCG$LCG_VERSION/$PLATFORM
fi

echo 'BUILD WITH LCG    : LCG VERSION        : ' $LCG
echo 'BUILD WITH LCG    : LCG PLATFORM       : ' $PLATFORM
echo 'BUILD WITH LCG    : ROOTSYS            : ' $ROOTSYS 
echo 'BUILD WITH LCG    : OSTAP_SOURCE       : ' $OSTAP_SOURCE
echo 'BUILD WITH LCG    : OSTAP_BUILD        : ' $OSTAP_BUILD
echo 'BUILD WITH LCG    : OSTAP_INSTALL      : ' $OSTAP_INSTALL

source $OSTAP_BUILD/.build-ostap $OSTAP_SOURCE $OSTAP_BUILD $OSTAP_INSTALL 

result=$?

echo ''
echo 'BUILD WITH LCG    : LCG VERSION     : ' $LCG
echo 'BUILD WITH LCG    : LCG PLATFORM    : ' $PLATFORM

if [[ $result -eq 0 ]]
then
    echo 'BUILD WITH LCG    : RESULT          : ' SUCCESS
else
    echo 'BUILD WITH LCG    : RESULT          : ' FAILURE  $result
fi

return $result 
