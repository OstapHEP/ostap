#!/usr/bin/bash

prefix1='<<BUILD OSTAP>>'
prefix1_error='<<BUILD OSTAP *ERROR*>>'
prefix2=${prefix1}
prefix2_error=${prefix1_error}

# ==========================================================================
## Color output ? 
# ==========================================================================
COLORS=$(tput colors 2> /dev/null)
if [[ $? == 0  && $COLORS -gt 2 ]]
then
    FWHITE='\033[1;97m'     # White
    BGREEN='\033[42m'       # Green
    FYELLOW='\033[1;93m'    # Yellow
    BRED='\033[6;101m'      # Red
    ##
    COLOR_OK=${FYELLOW}${BGREEN}
    COLOR_ERR=${FYELLOW}${BRED}
    COLOR_OFF='\033[0m' 
    ##
    prefix=${COLOR_OK}${prefix}${COLOR_OFF}
    prefix_error=${COLOR_ERR}${prefix_error}${COLOR_OFF}
    prefix1=${COLOR_OK}${prefix1}${COLOR_OFF}
    prefix1_error=${COLOR_ERR}${prefix1_error}${COLOR_OFF}
    prefix2=${COLOR_OK}${prefix2}${COLOR_OFF}
    prefix2_error=${COLOR_ERR}${prefix2_error}${COLOR_OFF}
    ## 
fi

# ==========================================================================
## Get parameters 
# ==========================================================================
OSTAP_SOURCE=${1:-${OSTAP_SOURCE}}
OSTAP_INSTALL=${2:-${OSTAP_INSTALL}}
OSTAP_BUILD=${3:-${OSTAP_BUILD}}

# ==========================================================================
## Valid ROOTSYS ? 
# ==========================================================================
if [[    ${ROOTSYS}                 &&
      -d ${ROOTSYS}                 &&
      -d ${ROOTSYS}/bin             &&
      -x ${ROOTSYS}/bin/root        &&
      -x ${ROOTSYS}/bin/root.exe    &&
      -x ${ROOTSYS}/bin/root-config ]]	    
then 
    true
else 
    echo -e ${prefix1_error}' No valid ROOTSYS directory:' ${ROOTSYS}
    return 200
fi

# ==========================================================================
## Valid source directory ? 
# ==========================================================================
if [[    ${OSTAP_SOURCE}                && 
      -d ${OSTAP_SOURCE}                &&
      -d ${OSTAP_SOURCE}/cmake          &&
      -d ${OSTAP_SOURCE}/data           &&
      -d ${OSTAP_SOURCE}/docs           &&
      -d ${OSTAP_SOURCE}/examples       &&
      -d ${OSTAP_SOURCE}/ostap          &&
      -d ${OSTAP_SOURCE}/scripts        &&
      -d ${OSTAP_SOURCE}/source         &&
      -d ${OSTAP_SOURCE}/ReleaseNotes   &&
      -f ${OSTAP_SOURCE}/CMakeLists.txt ]]
then
    OSTAP_SOURCE=$(readlink -f ${OSTAP_SOURCE})
    echo -e "${prefix1}"' Use OSTAP_SOURCE  = '${OSTAP_SOURCE}
else 	
    echo -e ${prefix1_error}' No valid source directory is found! '${OSTAP_SOURCE}
    return 201
fi


# ==========================================================================
## INSTALL directory 
# ==========================================================================
if [[ ${OSTAP_INSTALL} && "${OSTAP_INSTALL}}" ]]
then
    OSTAP_INSTALL=$(realpath -m ${OSTAP_INSTALL} )
else
    OSTAP_INSTALL=$(realpath -m "./INSTALL" )
fi

if [[      ${OSTAP_INSTALL} &&
        -d ${OSTAP_INSTALL} &&  
      ! -w ${OSTAP_INSTALL} ]]
then
    echo -e ${prefix1_error}' Directory OSTAP_INSTALL is not writeable! '${OSTAP_INSTALL}
    return 203
fi

echo -e "${prefix2}"' Use OSTAP_INSTALL = '${OSTAP_INSTALL}
    
# =========================================================================
## Valid build  directory (1) ? 
# ==========================================================================

if   [[    ${OSTAP_BUILD} &&
        -d ${OSTAP_BUILD} &&
        -w ${OSTAP_BUILD} ]]
then
    
    OSTAP_BUILD=$(readlink -f ${OSTAP_BUILD})
    echo -e "${prefix1}"' Use OSTAP_BUILD   = '${OSTAP_BUILD}

elif [[ -d ${OSTAP_SOURCE}/build &&
	-w ${OSTAP_SOURCE}/build ]]
then
    
     OSTAP_BUILD=$(readlink -f ${OSTAP_SOURCE}/build)
     echo -e "${prefix1}"' Use OSTAP_BUILD   = '${OSTAP_BUILD}

elif [[  -w ${OSTAP_SOURCE} &&
       ! -d ${OSTAP_SOURCE}/build ]]
then
    
     mkdir ${OSTAP_SOURCE}/build
     OSTAP_BUILD=$(readlink -f ${OSTAP_SOURCE}/build)
     echo -e ${prefix1}' Build directory is created '${OSTAP_BUILD}
     
else
    
    OSTAP_BUILD=`mktemp -d -t ostap-$(date '+%Y-%b-%d')-OSTAP-BUILD-DIR-XXXXXX`
    echo -e ${prefix1} ' Build directory is created '${OSTAP_BUILD}
    
fi

# =========================================================================
## Valid build  directory (2) ? 
# ==========================================================================
if   [[    ${OSTAP_BUILD} &&
	-d ${OSTAP_BUILD} &&
	-w ${OSTAP_BUILD} ]]
then
    OSTAP_BUILD=$(readlink -f ${OSTAP_BUILD})
else
    echo -e ${prefix1_error}' No valid build directory is found! '${OSTAP_BUILD}

fi     

# =========================================================================
## Clean install directory 
# ==========================================================================
if [[ -d ${OSTAP_INSTALL} && -w ${OSTAP_INSTALL} ]]
then
    OSTAP_INSTALL=$(readlink -f ${OSTAP_INSTALL})
    ( echo -e "${prefix2}"' [1/7] Clean  OSTAP_INSTALL directory        '${OSTAP_INSTALL} &&  
      cd ${OSTAP_INSTALL}                                                                 && 
      rm -rf .footprints .ostap.build .ostaprc .rootlogon.C cmake examples include lib scripts thisostap.sh packages )
fi

# =========================================================================
## Clean build  directory (1) 
# ==========================================================================
if [[ -f ${OSTAP_BUILD}/build.ninja ]]
then
    ( echo -e "${prefix2}"' [2/7] Clean  OSTAP_BUILD   build remnants   '${OSTAP_BUILD} &&
      cd ${OSTAP_BUILD} &&
      ninja clean )

fi

# =========================================================================
## Clean build  directory (2) 
# ==========================================================================
( echo -e "${prefix2}"' [3/7] Remove OSTAP_BUILD   remnants&garbage '${OSTAP_BUILD}  &&
  cd ${OSTAP_BUILD}                                                                  && 
  rm -rf CM* CP* CT* *nin* scripts/ source/ ostap/ examples/ Testing/ Ma* .nin* Dart* cmake* instal* packages Tes* *.py~ *.C~ __* _CPack* \#* *~ .*~ .\#* )


# =========================================================================
## CMAKE suppors "--fresh" options from 3.24 
# ==========================================================================
cmake_version=$(cmake --version | grep -Eo '[0-9]\.[0-9]+\.[0-9]+')
if [[ "${cmake_version}" < "3.24.0" ]]
then
    fresh=
else
    fresh="--fresh"
fi

# =========================================================================
## (FRESH) build 
# ==========================================================================
( echo -e "${prefix2}"' [4/7] First  pass of cmake&ninja&install    '${OSTAP_BUILD} && 
  cd ${OSTAP_BUILD}                                                                 && 
  cmake ${fresh} ${OSTAP_SOURCE} -DCMAKE_INSTALL_PREFIX=${OSTAP_INSTALL} -G Ninja   &&
  ninja                                                                             && 
  ninja install | grep -v Up-to-date | grep -v Installing )

# =========================================================================
## install directory must appear...  
# ==========================================================================
if [[ -d ${OSTAP_INSTALL} ]]
then
    true
else 
    echo -e "${prefix2_error}"' Missing install directory! '${OSTAP_INSTALL}
    return 205 
fi 

# =========================================================================
## Again ...
# ==========================================================================
( echo -e "${prefix2}"' [5/7] Second pass of cmake&ninja&install'    ${OSTAP_BUILD} &&
  cd ${OSTAP_BUILD}                                                                 && 
  cmake         ${OSTAP_SOURCE} -DCMAKE_INSTALL_PREFIX=${OSTAP_INSTALL} -G Ninja    && 
  ninja                                                                             && 
  ninja install | grep -v Up-to-date | grep -v Installing )


# =========================================================================
## setup script must be here
# ==========================================================================
if [[ -f ${OSTAP_INSTALL}/thisostap.sh &&
      -x ${OSTAP_INSTALL}/thisostap.sh ]]
then
    source ${OSTAP_INSTALL}/thisostap.sh
else
    echo -e "${prefi2_error}"' No thisostap.sh is found ' ${OSTAP_INSTALL}/thisostap.sh 
    return 206
fi

# =========================================================================
## Again ...
# ==========================================================================
( echo -e "${prefix2}"' [6/7] Third  pass of cmake&ninja&install    '${OSTAP_BUILD} &&
  cd ${OSTAP_BUILD}                                                                 && 
  cmake         ${OSTAP_SOURCE} -DCMAKE_INSTALL_PREFIX=${OSTAP_INSTALL} -G Ninja    && 
  ninja                                                                             && 
  ninja install | grep -v Up-to-date | grep -v Installing )

## ( echo -e "${prefix2}"' [7/7] Last   pass of cmake&ninja&package'  ;
##   cd ${OSTAP_BUILD} ;
##   cmake         ${OSTAP_SOURCE} -DCMAKE_INSTALL_PREFIX=${OSTAP_INSTALL} -G Ninja ; ninja ; ninja package  )

echo -e "${prefix2}"' ROOTSYS         : '${ROOTSYS}
echo -e "${prefix2}"' OSTAPDIR        : '${OSTAPDIR}
echo -e "${prefix2}"' OSTAP_SOURCE    : '${OSTAP_SOURCE}
echo -e "${prefix2}"' OSTAP_BUILD     : '${OSTAP_BUILD}
echo -e "${prefix2}"' OSTAP_INSTALL   : '${OSTAP_INSTALL}
echo -e "${prefix2}"' thisostap.sh    : '${OSTAP_INSTALL}/thisostap.sh
echo -e "${prefix2}"' root            : '$(which root       )
echo -e "${prefix2}"' root.exe        : '$(which root.exe   )
echo -e "${prefix2}"' root version    : '$(root.exe --version 2>&1 | sed -E "s/\\\\n/ /g" )
echo -e "${prefix2}"' python          : '$(which python    )
echo -e "${prefix2}"' python version  : '$(python   -VV       2>&1 | sed -E "s/\\\\n/ /g" )
echo -e "${prefix2}"' ostap           : '$(which ostap     )
echo -e "${prefix2}"' ostap version   : '$(ostap    --version 2>&1 | sed -E "s/\\\\n/ /g" )

if command -v tree &> /dev/null
then
    tree -d -L 3 --charset UTF-8 ${OSTAP_INSTALL}
fi 

