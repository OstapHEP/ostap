// ============================================================================
#ifndef OSTAP_BLOB_H 
#define OSTAP_BLOB_H 1
// ============================================================================
// Include files
// ============================================================================
// ROOT 
// ============================================================================
#include "TNamed.h"
#include "TArrayC.h"
// ============================================================================
namespace Ostap
{
  // ==========================================================================
  /** @class  BLOB Blob.h Ostap/Blob.h
   *  Trivial ROOT-based class to store blobs in ROOT file
   *  @author Vanya Belyaev
   *  @date   2019-03-27
   */
  class BLOB : public TNamed 
  {
  public:
    // ========================================================================
    ClassDefOverride(Ostap::BLOB,1) ;
    // ========================================================================
  public: 
    // ========================================================================
    /// Standard constructor
    BLOB ( const std::string& name   = "" , 
           const std::string& title  = "" ,
           const std::size_t  len    = 0  , 
           const void*        buffer = 0  ) ;
    /// destructor 
    virtual ~BLOB() ;
    // ========================================================================
  public: // gettters 
    // ========================================================================
    /// get the size of the buffer 
    std::size_t size   () const { return m_data.GetSize  () ; }
    /// get the buffer itself 
    const void* buffer () const { return m_data.GetArray () ; }    
    // ========================================================================
  public: // setters 
    // ========================================================================
    /// redefine the buffer 
    void setBuffer 
    ( const std::size_t size   , 
      const void*       buffer ) ;
    // ========================================================================
  private:
    // ========================================================================
    /// the data itself  
    TArrayC m_data {} ; // the data buffer 
    // ========================================================================
  };
  // ==========================================================================
} //                                                 The end of namespace Ostap
// ============================================================================
//                                                                     The END 
// ============================================================================
#endif // OSTAP_BLOB_H
// ============================================================================
